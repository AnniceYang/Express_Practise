生成新的SSH密钥：

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

一般默认路径为 ~/.ssh/id_rsa

如果有现有的SSH密钥，系统会提醒是否覆盖现有，自行选择


使用下面命令启动SSH agent并添加你的新密钥：
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa


将公钥，即刚刚显示出来的密钥内容（id_rsa.pub文件内容）添加到代码托管平台（coding.net）

查看公钥： cat ~/.ssh/id_rsa.pub
复制内容添加到远程仓库平台，SSH密钥设置页面，添加进去

通过命令验证SSH配置：ssh -T git@e.coding.net

一切正常显示 Hi username! You've successfully authenticated, but GitHub does not provide shell access.

重新尝试推送代码：git push -u origin main

每次提交代码：
git add .

git commit -m "修改内容描述"

git push -u origin main

即可；

最后不一定是main分支， 可以自己名字分支


查看当前远程URL：  git remote -v

修改远程URL 为 SSH 格式： git remote set-url origin git@github.com:AnniceYang/Work1.git

强制推送（会覆盖远程仓库）：git push -u origin main --force


清除所有SSH配置和密钥：

删除.ssh文件夹中所有内容：rm -rf ~/.ssh/*

重新生成SSH密钥：ssh-keygen -t rsa -b 4096 -C "你的邮箱@example.com"

当系统提示你保存密钥时，按 Enter 键使用默认路径（~/.ssh/id_rsa）。
如果希望设置密码，可以在提示时输入一个密码，或者按 Enter 键跳过设置密码。
完成后，你将生成新的 SSH 密钥，并保存在 ~/.ssh/id_rsa 和 ~/.ssh/id_rsa.pub。


查看生成的公钥文件：cat ~/.ssh/id_rsa.pub

测试SSH连接：ssh -T git@github.com
Hi <username>! You've successfully authenticated, but GitHub does not provide shell access.

使用SSH推送， 确保远程仓库URL使用SSH：
git remote set-url origin git@github.com:AnniceYang/Work1.git

git push -u origin main --force





